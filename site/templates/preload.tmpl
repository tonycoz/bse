<:.set groups = 0 -:>
<:.set grouplabel = "label" -:>
<:.set groupid = "id" -:>
<:.set itemgroupid = "groupid" -:>
<:.set dist_image_uri = cfg.entryIfVar("uri", "dist_images", "/images") -:>
<:# utility definitions :>
<:-.define make_select-:>
  <:-.if !default.defined -:>
    <:-.set default = "" -:>
  <:.end if:>
  <select name="<:= name | html :>">
  <:- .if groups -:>
    <:-.for i in list -:>
      <:.if i.$itemgroupid eq "" -:>
    <option value="<:= i.$id | html :>"
          <:- .if i.$id eq default :> selected="selected"<:.end if -:>
    >
        <:-= i.$desc | html -:>
      <:.end if -:>
    <:.end for -:>
    <:-.for g in groups -:>
    <optgroup label="<:= g.$grouplabel | html -:>">
      <:-.for i in list -:>
        <:.if i.$itemgroupid == g.$groupid -:>
      <option value="<:= i.$id | html :>"
          <:- .if i.$id eq default :> selected="selected"<:.end if -:>
      >
          <:-= i.$desc | html -:>
        <:.end if -:>
      <:.end for -:>
    </optgroup>
    <:-.end for -:>
  <:- .else -:>
    <:-.for i in list -:>
    <option value="<:= i.$id | html :>"
        <:- .if i.$id eq default :> selected="selected"<:.end if -:>
    >
      <:-= i.$desc | html -:>
    <:-.end for-:>
  <:-.end if -:>
  </select>
<:-.end define -:>
<:#
page_list expects:
base - base url for links
pages - the result of the bse.pages call
 :>
<:-.define page_list-:>
<:.set sep = base =~ /\?/ ? "&" : "?" -:>
<:.set base = base _ sep :>
<div class="pagelist">
Page <:= pages.page :> of <:= pages.pagecount :>
<:.if pages.previous_page -:>
<a href="<:= base |html:><:= pages.pname | uri :>=1&amp;<:= pages.ppname | uri :>=<:= pages.pp | uri :>">&lt;&lt</a>
<a href="<:= base |html:><:= pages.pname | uri :>=<:= pages.previous_page |uri:>&amp;<:= pages.ppname | uri :>=<:= pages.pp | uri :>">&lt;</a>
<:.else -:>
<span>&lt&lt</span>
<span>&lt</span>
<:.end if -:>
<:.for p in pcats.pages :>
<:.if p.link -:>
<a href="<:= base |html :><:= pages.pname | uri:>=<:= p.page | uri :>&amp;<:=pages.ppname | uri :>=<:= pages.pp | uri :>"><:= p.page |html :></a>
<:.else -:>
<span><:= p.page |html:></span>
<:.end if -:>
<:.end for:>
<:.if pages.next_page -:>
<a href="<:= base |html:><:= pages.pname | uri :>=<:= pages.next_page |uri:>&amp;<:= pages.ppname | uri :>=<:= pages.pp | uri :>">&gt;</a>
<a href="<:= base |html:><:= pages.pname | uri :>=<:= pages.pagecount |uri:>&amp;<:= pages.ppname | uri :>=<:= pages.pp | uri :>">&gt;&gt</a>
<:.else -:>
<span>&gt&gt</span>
<span>&gt</span>
<:.end if -:>
</div>
<:-.end define -:>

<:.define old -:>
<:# parameters: field, default -:>
<:  .if cgi.param(field).defined -:>
<:= cgi.param(field) -:>
<:  .else -:>
<:= default | html -:>
<:  .end if -:>
<:.end define-:>

<:.define error_img_n -:>
<:# parameters:
   field - name of field
   index - index of field
   errors - hash of error messages (should be set by code)
-:>
  <:.if errors.$field -:>
    <:.set msg = errors.$field -:>
    <:.set msg = msg.is_list ? msg[index] : msg -:>
    <:.set image = cfg.entry("error_img", "image", dist_image_uri _ "/admin/error.gif") -:>
    <:.set width = cfg.entry("error_img", "width", 16) -:>
    <:.set height = cfg.entry("error_img", "height", 16) -:>
    <img src="<:= image -:>" alt="<:= msg :>" title="<:= msg :>" width="<:= width :>" height="<:= height :>" class="error_img">
  <:.end if -:>
<:.end define -:>

<:.define error_img -:>
<:.call "error_img_n", "index":0 -:>
<:.end define -:>

<:.define input -:>
<:# paramaters:
  name - field name
  fields - hash of fields (may be set by page instead)
  object - source for defaults in edit mode
:>
<:  .set f = fields[name] -:>
<:  .if object -:>
<:     .set default = object.get(name) -:>
<:  .elsif f.default -:>
<:     .set default = f.default -:>
<:  .else -:>
<:     .set default = "" -:>
<:  .end if -:>
<:  .if f.type and f.type eq "date" and default ne "" -:>
<:    .set default = default.replace(/(\d+)\D+(\d+)\D+(\d+)/, "$3/$2/$1") -:>
<:  .elsif f.type and f.type eq "time" and default ne "" -:>
<:    .set default = bse.date(default =~ /:00$/ ? "%I:%M%p" : "%I:%M:%S%p", default).replace(/^0/, "").lower() -:>
<:  .end if -:>
<:  .if cgi.param(name).defined -:>
<:     .set default = cgi.param(name) -:>
<:  .end if -:>
<:  .if f.htmltype eq "textarea" -:>
<textarea id="<:= name | html :>" name="<:= name | html :>" rows="<:= f.height ? f.height : cfg.entry("forms", "textarea_rows", 10) :>" cols=<:= f.width ? f.width : cfg.entry("textarea_cols", 60) | html :>>
<:-= default | html -:>
</textarea>
<:  .elsif f.htmltype eq "checkbox" -:>
<:.set is_checked = request.method() eq 'post' ? cgi.param(name).defined : default -:>
<input id="<:= name | html :>" type="checkbox" name="<:= name | html :>"<:= is_checked ? ' checked="checked"' : '' :> value="<:= f.value ? f.value : 1 | html :>" />
<:  .elsif f.htmltype eq "select" -:>
<:.set values = f.select["values"] -:>
<:.set values = values.is_code ? values() : values -:>
<:.call "make_select",
    "name":name,
    "default":default,
    "list":values,
    "id":f.select.id,
    "desc":f.select.label,
    "groupid": (f.select.groupid or "id"),
    "itemgroupid": (f.select.itemgroupid or "groupid"),
    "groups": f.select.groups ? (f.select.groups.is_code ? (f.select.groups)() : f.select.groups ) : 0,
    "grouplabel": (f.select.grouplabel or "label")
-:>
<:  .else -:>
<input id="<:= name | html :>" type="text" name="<:= name | html :>" value="<:=  default | html :>" 
<:-= f.maxlength ? ' maxlength="' _ f.maxlength _ '"' : '' :>
<:-= f.width ? ' size="' _ f.width _ '"' : '' :> />
<:  .end if -:>
<:.end define -:>

<:.define field -:>
<:# parameters:
  name - field name
  fields - hash of fields (may be set by page instead)
:>
  <:.set f = fields[name] -:>
<div>
  <label for="<:= name | html :>"><:= f.nolabel ? "" : f.description | html :>:</label>
  <span><:.call "input", "name":name -:><:.call "error_img", "field":name :>
  <:-.if f.units -:>
    <:-= f.units | html -:>
  <:-.end if -:>
</span>
</div>
<:.end define -:>

<:.define messages -:>
<:  .if request.messages.size -:>
<div class="messages">
<:     .for m in request.messages -:>
  <div class="<:= m.class :>"><:= m.html |raw :></div>
<:     .end for -:> 
</div>
<:  .end if -:>
<:.end define -:>

<:.define mover -:>
<:# expects loop, parent
  which in most cases means you can just supply parent
-:>
<:.set distim = cfg.entryIfVar("uri", "dist_images", "/images") -:>
<:.set width = cfg.entry("arrows", "width", 17) -:>
<:.set height = cfg.entry("arrows", "height", 13) -:>
<:.set extras = 'width="' _ width _ '" height="' _ height _ '"' -:>
<:.set blankim = '<img src="' _ (distim _ "/trans_pixel.gif").escape("html") _ '" alt="" ' _ extras _ ' />' -:>
<:.if loop.prev -:>
  <:.set upimg = cfg.entry("arrows", "upimg", distim _ "/admin/move_up.gif") -:>
<a href="<:= cfg.admin_url("move", { "stepparent":parent.id, "d":"swap", "id":loop.current.id, "other":loop.prev.id, "r":top.admin }) :>"><img src="<:= upimg :>" <:= extras :> /></a>
<:.else -:>
<:= blankim |raw-:>
<:.end if -:>
<:.if loop.next -:>
  <:.set downimg = cfg.entry("arrows", "downimg", distim _ "/admin/move_down.gif") -:>
<a href="<:= cfg.admin_url("move", { "stepparent":parent.id, "d":"swap", "id":loop.current.id, "other":loop.next.id, "r":top.admin }) :>"><img src="<:= downimg :>" <:= extras :> /></a>
<:.else -:>
<:= blankim |raw-:>
<:.end if -:>

<:.end define -:>

<:- include includes/custom/preload.tmpl optional -:>
